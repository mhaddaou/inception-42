version: "3"


networks:
  my_network:
    driver: bridge
  


volumes:
    wordpress_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/psychom/data/wp/
    mariadb_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/psychom/data/db/
    adminer_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/psychom/data/adm/

services:
  mariadb:
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
      args:
       - MYSQL_HOST=${MYSQL_HOST}
       - MYSQL_DATABASE=${MYSQL_DATABASE}
       - MYSQL_USER=${MYSQL_USER}
       - MYSQL_PASSWORD=${MYSQL_PASSWORD}
       - WORDPRESS_ROOT_PASSWORD=${WORDPRESS_ROOT_PASSWORD}
    image: mariadb
    container_name: MARIADB
    networks:
      - my_network
    volumes:
      - mariadb_data:/var/lib/mysql
    restart: unless-stopped

  redis:
    build: ./requirements/bonus/redis
    container_name: REDIS
    image: redis
    networks:
      - my_network
    ports:
      - 6379:6379
    restart: unless-stopped

  wordpress:
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress
    container_name: WORDPRESS
    networks:
      - my_network
    volumes:
      - wordpress_data:/var/www/wordpress:rw
    depends_on:
      - mariadb
      - redis
    env_file:
      - .env
    restart: unless-stopped

  nginx:
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: NGINX
    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - my_network
    volumes:
      - wordpress_data:/var/www/wordpress:rw
    restart: unless-stopped

  adminer:
    build: ./requirements/bonus/adminer
    container_name: ADMINER
    image: adminer
    networks:
    - my_network
    ports:
      - "8080:8080"
    depends_on:
      - mariadb
    restart: unless-stopped
    
  website:
    build: ./requirements/bonus/website
    container_name: WEBSITE
    image: website
    networks:
      - my_network
    ports:
      - 81:81
    restart: unless-stopped

  cadvisor:
    build: ./requirements/bonus/cadvisor
    container_name: CADVISOR
    image: cadvisor
    networks:
      - my_network
    ports:
      - 2000:2000
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/kmsg:/dev/kmsg"
    privileged: true
    restart: unless-stopped
